#pragma once

#include <cstddef>

#include "OSInclude.hpp"

#ifdef _WIN32

namespace cg {
namespace colors {

enum class ForegroundColor : uint8_t {
	Black = 0,
	DarkBlue = FOREGROUND_BLUE,
	DarkGreen = FOREGROUND_GREEN,
	DarkCyan = FOREGROUND_GREEN | FOREGROUND_BLUE,
	DarkRed = FOREGROUND_RED,
	DarkMagenta = FOREGROUND_RED | FOREGROUND_BLUE,
	DarkYellow = FOREGROUND_RED | FOREGROUND_GREEN,
	DarkGrey = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
	Grey = FOREGROUND_INTENSITY,
	Blue = FOREGROUND_INTENSITY | FOREGROUND_BLUE,
	Green = FOREGROUND_INTENSITY | FOREGROUND_GREEN,
	Cyan = FOREGROUND_INTENSITY | FOREGROUND_GREEN | FOREGROUND_BLUE,
	Red = FOREGROUND_INTENSITY | FOREGROUND_RED,
	Magenta = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_BLUE,
	Yellow = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN,
	White = FOREGROUND_INTENSITY | FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
	NoChange = 245,
};
enum class BackgroundColor : uint8_t {
	Black = 0,
	DarkBlue = BACKGROUND_BLUE,
	DarkGreen = BACKGROUND_GREEN,
	DarkCyan = BACKGROUND_GREEN | BACKGROUND_BLUE,
	DarkRed = BACKGROUND_RED,
	DarkMagenta = BACKGROUND_RED | BACKGROUND_BLUE,
	DarkYellow = BACKGROUND_RED | BACKGROUND_GREEN,
	DarkGrey = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
	Grey = BACKGROUND_INTENSITY,
	Blue = BACKGROUND_INTENSITY | BACKGROUND_BLUE,
	Green = BACKGROUND_INTENSITY | BACKGROUND_GREEN,
	Cyan = BACKGROUND_INTENSITY | BACKGROUND_GREEN | BACKGROUND_BLUE,
	Red = BACKGROUND_INTENSITY | BACKGROUND_RED,
	Magenta = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_BLUE,
	Yellow = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_GREEN,
	White = BACKGROUND_INTENSITY | BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
	NoChange = 246,
};
}
}
#else
/*linux colors here.*/



#endif